#!/usr/bin/env bash
set -e 

trap 'PREV=${THIS}; THIS=${BASH_COMMAND}' DEBUG

SCRIPT=$( basename $0 )

status(){
 echo "${SCRIPT}: $*"
}

error_exit(){
  if [ $? -ne "0" ]; then
    status "${PREV} failed with exit code $?"
    exit 1
  fi
}

trap error_exit EXIT

EMACSCLIENTS=( $(which -a emacsclient) )
EMACSCLIENT=( ${EMACSCLIENTS[@]#${0}} )
if [ ${#EMACSCLIENT[@]} -ne "0" ]; then
  ${EMACSCLIENT} -c $@ && exit $? || exit $?
fi

XAUTHORITY=/tmp/.docker.xauth
XSOCKET=/tmp/.X11-unix
DISPLAY=$(expr "$DISPLAY" : '.*\(:.*\)')
HOME=${HOME:-/home/${USER}}

test -f ${XAUTHORITY} && true || touch ${XAUTHORITY}

OPTS="-v ${HOME}:${HOME} \
     $( [ -d ${XSOCKET} ]    && echo -v ${XSOCKET}:${XSOCKET}:rw ) \
     $( [ -f ${XAUTHORITY} ] && echo -v ${XAUTHORITY}:${XAUTHORITY}:ro ) \
     -v ${BROWSER}:${BROWSER} \
     -e XAUTHORITY=${XAUTHORITY} \
     -e BROWSER=${BROWSER} \
     --user=$(id -un):$(id -gn) \
     "

CLIENT_OPTS="-e DISPLAY=${DISPLAY} \
             -e XAUTHORITY=${XAUTHORITY} \
             -e BROWSER=${BROWSER} \
             " 

status "Finding image..."
IMAGES=( $(docker image ls --filter "reference=*emacs*" -q) )

[ ${#IMAGES[@]} -eq "0" ] && status "No emacs image found. Exiting." && exit 1

status "Found image ${IMAGE}..."

status "Looking for container that uses ${IMAGE}..."

CONTAINER=$(docker container ls -q -a --last=-1 ${IMAGES[@]/#/--filter ancestor=})

[ -z "${CONTAINER}" ] && status "No container found. Creating container..." \
       	&& CONTAINER=$(docker container run -d ${OPTS} ${IMAGES}) 

status "Using container ${CONTAINER}..."

eval $(docker container inspect ${CONTAINER} --format='{{with .State}}PAUSED={{.Paused}} RUNNING={{.Running}}{{end}}')
eval ${RUNNING} || ( status "Starting container..."  && docker container start   ${CONTAINER} > /dev/null )
eval ${PAUSED}  && ( status "Unpausing container..." && docker container unpause ${CONTAINER} > /dev/null )

xauth nlist ${DISPLAY} | sed -e 's/^..../ffff/' | xauth -f ${XAUTHORITY} nmerge -

LIVE=0
until [ ${LIVE} -gt "0" ]; do
  docker container exec -t ${CLIENT_OPTS} ${CONTAINER}  /usr/bin/emacsclient -c $@ && LIVE=1 || LIVE=0
  [ ${LIVE} -eq "0" ] && status "Retrying..." && sleep 5
done

CLIENTS=$( docker container exec ${CONTAINER} ps -o comm | grep -s -c emacsclient || true)
[ ${CLIENTS} -eq "0" ]  && status "No more clients pausing ${CONTAINER}" && docker container pause ${CONTAINER} > /dev/null 

